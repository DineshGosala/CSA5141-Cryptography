#include <stdio.h>
#include <stdlib.h>
#include <openssl/dsa.h>
#include <openssl/rand.h>

#define MESSAGE "Hello, world!"

int main() {
    DSA *dsa;
    unsigned char *sig;
    unsigned int sig_len;
    const char *message = MESSAGE;
    int message_len = strlen(message);

    // Create a DSA structure
    dsa = DSA_generate_parameters(1024, NULL, 0, NULL, NULL, NULL, NULL);

    // Generate private and public keys
    DSA_generate_key(dsa);

    // Allocate memory for the signature
    sig = (unsigned char *)malloc(DSA_size(dsa));

    // Generate a random k value for each signature
    unsigned char k[20]; // Arbitrary size for k
    RAND_bytes(k, sizeof(k));

    // Sign the message
    DSA_sign(0, (const unsigned char *)message, message_len, sig, &sig_len, dsa);

    // Verify the signature
    if (DSA_verify(0, (const unsigned char *)message, message_len, sig, sig_len, dsa) == 1) {
        printf("DSA Signature verified successfully.\n");
    } else {
        printf("DSA Signature verification failed.\n");
    }

    // Free allocated memory
    free(sig);
    DSA_free(dsa);

    return 0;
}
